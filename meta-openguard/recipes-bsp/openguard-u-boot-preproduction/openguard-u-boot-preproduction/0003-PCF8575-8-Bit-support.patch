From 9e938f8b8e471d601488ee786a9545910b6dce7c Mon Sep 17 00:00:00 2001
From: Konrad Weihmann <kweihmann@phoenixcontact.com>
Date: Thu, 8 Nov 2018 13:30:20 +0100
Subject: [PATCH] PCF8575 8-Bit support

---
 arch/arm/dts/armada-3720-mguard3.dts | 10 ++++++++--
 drivers/gpio/pcf8575_gpio.c          | 10 +++++++---
 2 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/arch/arm/dts/armada-3720-mguard3.dts b/arch/arm/dts/armada-3720-mguard3.dts
index b7b5ead473..d89890c3cf 100644
--- a/arch/arm/dts/armada-3720-mguard3.dts
+++ b/arch/arm/dts/armada-3720-mguard3.dts
@@ -135,10 +135,13 @@
 
 	gpio_exp0: pca8574@21 {
 		/* A0=1 A1=0 A2=0, Addr=21h */
-		compatible = "nxp,pca8574";
+		compatible = "nxp,pcf8575";
 		gpio-controller;
 		#gpio-cells = <2>;
 		reg = <0x21>;
+		gpio-count = <8>;
+		gpio-bank-name = "gpioexp1";
+		u-boot,i2c-offset-len = <0>;
 		/* IO0_0: IN_1		IO0_1: IN_2
 		 * IO0_2: IN_3		IO0_3: nOUT_1
 		 * IO0_4: nOUT_2	IO0_5: nOUT_3
@@ -147,10 +150,13 @@
 	};
 	gpio_exp1: pca8574@22 {
 		/* A0=0 A1=1 A2=0, Addr=22h */
-		compatible = "nxp,pca8574";
+		compatible = "nxp,pcf8575";
 		gpio-controller;
 		#gpio-cells = <2>;
 		reg = <0x22>;
+		gpio-count = <8>;
+		gpio-bank-name = "gpioexp2";
+		u-boot,i2c-offset-len = <0>;
 		/* IO1_0: LED_RD_3	IO1_1: LED_RD_4
 		 * IO1_2: LED_RD_5	IO1_3: LED_GN_1
 		 * IO1_4: LED_GN_2	IO1_5: LED_GN_3
diff --git a/drivers/gpio/pcf8575_gpio.c b/drivers/gpio/pcf8575_gpio.c
index 2cbb9e61ea..a60b435b03 100644
--- a/drivers/gpio/pcf8575_gpio.c
+++ b/drivers/gpio/pcf8575_gpio.c
@@ -58,7 +58,9 @@ static int pcf8575_i2c_write_le16(struct udevice *dev, unsigned int word)
 	u8 buf[2] = { word & 0xff, word >> 8, };
 	int ret;
 
-	ret = dm_i2c_write(dev, 0, buf, 2);
+	struct gpio_dev_priv *uc_priv = dev_get_uclass_priv(dev);
+
+	ret = dm_i2c_write(dev, 0, buf, uc_priv->gpio_count == 8 ? 1 : 2);
 	if (ret)
 		printf("%s i2c write failed to addr %x\n", __func__,
 		       chip->chip_addr);
@@ -69,10 +71,12 @@ static int pcf8575_i2c_write_le16(struct udevice *dev, unsigned int word)
 static int pcf8575_i2c_read_le16(struct udevice *dev)
 {
 	struct dm_i2c_chip *chip = dev_get_parent_platdata(dev);
-	u8 buf[2];
+	u8 buf[2] = {};
 	int ret;
 
-	ret = dm_i2c_read(dev, 0, buf, 2);
+	struct gpio_dev_priv *uc_priv = dev_get_uclass_priv(dev);
+
+	ret = dm_i2c_read(dev, 0, buf, uc_priv->gpio_count == 8 ? 1 : 2);
 	if (ret) {
 		printf("%s i2c read failed from addr %x\n", __func__,
 		       chip->chip_addr);
-- 
2.14.2

